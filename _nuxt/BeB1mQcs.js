const J=()=>{const O=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(R){setTimeout(R,10)};let _,E,r,b,v,n,e,l,f,A,d,c,u,M,w,I,m,g,h,s,L,P,C,D,F,H,k,o,y,N=0,z=0;class U{constructor(t){let i={};t&&(t.nodeName?(i=JSON.parse(JSON.stringify(t.dataset)),t.nodeName==="IMG"?i.image=t:i.wrapperElement=t):i=t),this.state="stopped",this.touches=[],this.on("imageLoaded",this._onImageLoaded),this._initImage(i)}on(t,i){this.events=this.events||{},this.events[t]=this.events[t]||[],this.events[t].push(i)}emit(t,i){const a=this.events[t];if(a&&a.length)for(let x=0;x<a.length;x++)a[x].call(this,i)}get renderer(){return this._renderer}set renderer(t){this._renderer=t,this._draw=this["_"+t+"Renderer"];try{this["_"+t+"InitContext"]()}catch(i){console.log(i),t!=="default"&&(this.renderer="default")}}set color(t){this.colorArr=this._parseColor(t),this.colorArr&&(isNaN(this.colorArr[3])&&(this.colorArr[3]=255),0<this.colorArr[3]&&this.colorArr[3]<=1&&(this.colorArr[3]*=255))}start(t){const i=t||{};this.initPosition=i.initPosition||this.initPosition,this.initDirection=i.initDirection||this.initDirection,this.canvas&&(this.canvas.width=this.width,this.canvas.height=this.height,this.canvas.style.display=""),this._initOrigins(),this._initParticles(),this._webglSetAttributes(),this.state!=="running"&&(this.state="running",this.disableInteraction||("ontouchstart"in window||window.navigator.msPointerEnabled?(document.body.addEventListener("touchstart",this._touchHandler),document.body.addEventListener("touchmove",this._touchHandler),document.body.addEventListener("touchend",this._clearTouches),document.body.addEventListener("touchcancel",this._clearTouches)):(this.canvas.addEventListener("mousemove",this._mouseHandler),this.canvas.addEventListener("mouseout",this._clearTouches),this.canvas.addEventListener("click",this._clickHandler))),this._animate())}stop(t){const i=t||{};this.fadePosition=i.fadePosition||this.fadePosition,this.fadeDirection=i.fadeDirection||this.fadeDirection,this._fade(),document.body.removeEventListener("touchstart",this._touchHandler),document.body.removeEventListener("touchmove",this._touchHandler),document.body.removeEventListener("touchend",this._clearTouches),document.body.removeEventListener("touchcancel",this._clearTouches),this.canvas&&(this.canvas.removeEventListener("mousemove",this._mouseHandler),this.canvas.removeEventListener("mouseout",this._clearTouches),this.canvas.removeEventListener("click",this._clickHandler))}_animate(){this.state!=="stopped"?(this._calculate(),this._draw(),O(()=>this._animate())):this.emit("stopped")}get _mouseHandler(){return t=>{this.touches=[{x:t.offsetX,y:t.offsetY,z:49+(this.layerCount-1)*this.layerDistance,force:1}]}}get _clickHandler(){return t=>{const i=this.clickStrength;this.origins.map(a=>a.z-=i),setTimeout(()=>{this.origins.map(a=>a.z+=i)},100)}}get _touchHandler(){return t=>{for(this.touches=[],A=this.canvas.getBoundingClientRect(),f=0;f<t.changedTouches.length;f++)l=t.changedTouches[f],l.target===this.canvas&&(this.touches.push({x:l.pageX-A.left,y:l.pageY-A.top,z:49+(this.layerCount-1)*this.layerDistance,force:l.force||1}),t.preventDefault())}}get _clearTouches(){return t=>{this.touches=[]}}_onImageLoaded(t){this.imageWidth=this.image.naturalWidth||this.image.width,this.imageHeight=this.image.naturalHeight||this.image.height,this.imageRatio=this.imageWidth/this.imageHeight,this.width=this.width||this.imageWidth,this.height=this.height||this.imageHeight,this.renderSize=(this.width+this.height)/4,this.srcImage&&(this.srcImage.style.display="none"),this._initSettings(t),this._initContext(t),this._initResponsive(t),this.start()}_initImage(t){this.srcImage=t.image,!this.srcImage&&t.imageId&&(this.srcImage=document.getElementById(t.imageId)),this.imageUrl=t.imageUrl||this.srcImage.src,this.image=document.createElement("img"),this.wrapperElement=t.wrapperElement||this.srcImage.parentElement,this.image.onload=()=>this.emit("imageLoaded",t),this.image.crossOrigin="Anonymous",t.addTimestamp&&(/\?/.test(this.imageUrl)?this.imageUrl+="&d="+Date.now():this.imageUrl+="?d="+Date.now()),this.image.src=this.imageUrl}_initContext(t){this.canvas=t.canvas,!this.canvas&&!this.context&&this.wrapperElement&&(this.canvas=document.createElement("canvas"),this.wrapperElement.appendChild(this.canvas)),this.convas&&(this.convas.style.display="none"),this.context=t.context,this.renderer=t.renderer||"default"}_defaultInitContext(t){this.context=this.context||this.canvas.getContext("2d")}_webglInitContext(){this.context=this.context||this.canvas.getContext("webgl2")||this.canvas.getContext("experimental-webgl"),this.fragmentShaderScript=`#version 300 es
    
            precision highp float;
    
            in vec4 vColor;
            out vec4 fragColor;
    
            void main(void) {
              // fragColor = vec4(1, 1, 1, 0.1);
              fragColor = vColor;
            }
          `,this.vertexShaderScript=`#version 300 es
    
            precision highp float;
    
            in vec3 vertexPosition;
            in vec4 vertexColor;
            uniform vec3 vertexOffset;
            uniform float pointSize;
            uniform float depth;
            vec3 mirror = vec3(1, -1, 1);
    
            uniform mat4 modelViewMatrix;
            uniform mat4 perspectiveMatrix;
            uniform mat4 rotationMatrix;
    
            out vec4 vColor;
    
            void main(void) {
              gl_Position = rotationMatrix * perspectiveMatrix * modelViewMatrix * vec4(mirror * vertexPosition + vertexOffset, vertexPosition);
              gl_PointSize = pointSize + max((log(vertexPosition.z) - 3.91) * depth, -pointSize + 1.0);
              vColor = vertexColor;
            }
          `,this.context.viewport(0,0,this.width,this.height);const t=this.context.createShader(this.context.VERTEX_SHADER);this.context.shaderSource(t,this.vertexShaderScript),this.context.compileShader(t),this.context.getShaderParameter(t,this.context.COMPILE_STATUS)||console.log(this.context.getShaderInfoLog(t));const i=this.context.createShader(this.context.FRAGMENT_SHADER);this.context.shaderSource(i,this.fragmentShaderScript),this.context.compileShader(i),this.context.getShaderParameter(i,this.context.COMPILE_STATUS)||console.log(this.context.getShaderInfoLog(i)),this.program=this.context.createProgram(),this.context.attachShader(this.program,t),this.context.attachShader(this.program,i),this.context.linkProgram(this.program),this.context.useProgram(this.program),this.vertexPosition=this.context.getAttribLocation(this.program,"vertexPosition"),this.context.enableVertexAttribArray(this.vertexPosition),this.vertexColor=this.context.getAttribLocation(this.program,"vertexColor"),this.context.enableVertexAttribArray(this.vertexColor),this.context.clearColor(0,0,0,0),this.context.enable(this.context.BLEND),this.context.disable(this.context.DEPTH_TEST),this.context.blendFunc(this.context.SRC_ALPHA,this.context.ONE),this.vertexBuffer=this.context.createBuffer(),this.context.bindBuffer(this.context.ARRAY_BUFFER,this.vertexBuffer),this.context.clear(this.context.COLOR_BUFFER_BIT|this.context.DEPTH_BUFFER_BIT),this.vertexOffset=this.context.getUniformLocation(this.program,"vertexOffset"),this.context.uniform3f(this.vertexOffset,0,0,1e3),this.context.vertexAttribPointer(this.vertexPosition,3,this.context.FLOAT,!1,28,0),this.context.vertexAttribPointer(this.vertexColor,4,this.context.FLOAT,!1,28,12),this.uModelViewMatrix=this.context.getUniformLocation(this.program,"modelViewMatrix"),this.uPerspectiveMatrix=this.context.getUniformLocation(this.program,"perspectiveMatrix"),this.uRotationMatrix=this.context.getUniformLocation(this.program,"rotationMatrix"),this.uPointSize=this.context.getUniformLocation(this.program,"pointSize"),this.uDepth=this.context.getUniformLocation(this.program,"depth"),this._webglSetAttributes()}_webglSetAttributes(){if(this.renderer==="webgl"){var t=1,i=this.canvas.width/this.canvas.height,a=10,x=100,p=a*Math.tan(t*Math.PI/360),T=-p,S=p*i,W=-S,B=(S+W)/(S-W),Y=(p+T)/(p-T),V=(x+a)/(x-a),X=2*x*a/(x-a),Z=2*a/(S-W),q=2*a/(p-T),G=[Z,0,B,0,0,q,Y,0,0,0,V,X,0,0,-1,0],$=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];this.context.viewport(0,0,this.width,this.height),this.context.uniformMatrix4fv(this.uModelViewMatrix,!1,new Float32Array(G)),this.context.uniformMatrix4fv(this.uPerspectiveMatrix,!1,new Float32Array($)),this.context.uniform1f(this.uPointSize,this.particleSize),this.context.uniform1f(this.uDepth,this.depth),this._updateRotation()}}_updateRotation(){const t=Math.cos(N),i=Math.sin(N),a=Math.cos(z),x=Math.sin(z);var p=[a,0,x,0,0,t,-i,0,-a,i,t,0,0,0,0,1];this.context.uniformMatrix4fv(this.uRotationMatrix,!1,new Float32Array(p))}_webglRenderer(){L=new Float32Array(this.vertices),this.context.bufferData(this.context.ARRAY_BUFFER,L,this.context.STATIC_DRAW),this.context.clear(this.context.COLOR_BUFFER_BIT|this.context.DEPTH_BUFFER_BIT),this.context.drawArrays(this.context.POINTS,0,this.particles.length),this.context.flush()}_initSettings(t){this.width=t.width*1||this.width,this.height=t.height*1||this.height,this.maxWidth=t.maxWidth,this.maxHeight=t.maxHeight,this.minWidth=t.minWidth,this.minHeight=t.minHeight,this.maxWidth&&(/%$/.test(this.maxWidth)?this.maxWidth=this.width*this.maxWidth.replace("%","")/100:this.maxWidth*=1),this.maxHeight&&(/%$/.test(this.maxHeight)?this.maxHeight=this.height*this.maxHeight.replace("%","")/100:this.maxHeight*=1),this.minWidth&&(/%$/.test(this.minWidth)?this.minWidth=this.width*this.minWidth.replace("%","")/100:this.minWidth*=1),this.minHeight&&(/%$/.test(this.minHeight)?this.minHeight=this.height*this.minHeight.replace("%","")/100:this.minHeight*=1),this.alphaFade=.4,this.gravity=t.gravity*1||.08,this.particleGap=t.particleGap*1||3,this.particleSize=t.particleSize*1||1,this.layerCount=t.layerCount*1||1,this.depth=t.depth*1||1,this.rotationDuration=t.rotationDuration*1||0,this.growDuration=t.growDuration*1||200,this.waitDuration=t.waitDuration*1||200,this.shrinkDuration=t.shrinkDuration*1||200,this.shrinkDistance=t.shrinkDistance*1||50,this.threeDimensional=t.threeDimensional!==void 0&&t.threeDimensional!=="false"?!!t.threeDimensional:!1,this.lifeCycle=t.lifeCycle!==void 0&&t.lifeCycle!=="false"?!!t.lifeCycle:!1,this.layerDistance=t.layerDistance||this.particleGap,this.initPosition=t.initPosition||"random",this.initDirection=t.initDirection||"random",this.fadePosition=t.fadePosition||"none",this.fadeDirection=t.fadeDirection||"none",this.noise=isNaN(t.noise*1)?10:t.noise*1,this.disableInteraction=t.disableInteraction,this.mouseForce=t.mouseForce*1||30,this.clickStrength=t.clickStrength*1||0,this.color=t.color,this.colorArr=t.colorArr||this.colorArr}_initResponsive(t){this.responsiveWidth=this.wrapperElement&&t.responsiveWidth,this.responsiveWidth&&(this.on("stopped",()=>{this.width=this.wrapperElement.clientWidth,this.start()}),this.wrapperElement.addEventListener("resize",()=>{this.width!==this.wrapperElement.clientWidth&&this.stop()}),this.width=this.wrapperElement.clientWidth)}_calculate(){for(this.vertices=this.renderer==="webgl"?[]:!1,E=0,r=0;r<this.particles.length;r++){for(n=this.origins[r],e=this.particles[r],M=n.x-e.x+(Math.random()-.5)*this.noise,w=n.y-e.y+(Math.random()-.5)*this.noise,I=n.z-e.z+(Math.random()-.5)*this.noise/1e3,m=Math.sqrt(M*M+w*w+I*I),g=m*.01,e.vx+=g*(M/m)*this.speed,e.vy+=g*(w/m)*this.speed,e.vz+=g*(I/m)*this.speed,f=0;f<this.touches.length;f++)l=this.touches[f],M=e.x-l.x,w=e.y-l.y,I=e.z-l.z,m=Math.sqrt(M*M+w*w+I*I),g=this.mouseForce*l.force/m,e.vx+=g*(M/m)*this.speed,e.vy+=g*(w/m)*this.speed,e.vz+=g*(I/m)*this.speed;e.vx*=this.gravityFactor,e.vy*=this.gravityFactor,e.vz*=this.gravityFactor,e.x+=e.vx,e.y+=e.vy,e.z+=e.vz,0>e.x||e.x>=this.width||0>e.y||e.y>=this.height?(e.isHidden=!0,this.state==="stopping"&&(e.isDead=!0)):(this.state==="stopping"&&!e.isDead&&E++,e.isHidden=!1),this.vertices&&(d=e.x-this.width/2,c=e.y-this.height/2,u=e.z,o=n.vertexColors[3],this.lifeCycle&&(n.tick+=1,n.tick>=0?n.tick<this.growDuration?o=o*(n.tick/this.growDuration):(y=n.tick-this.growDuration-this.waitDuration,y>=0&&y<=this.shrinkDuration&&(l=this.touches[f],m=Math.sqrt(d*d+c*c+(u-50)*(u-50)),g=y/this.shrinkDuration,d+=this.shrinkDistance*(d/m)*g,c+=this.shrinkDistance*(c/m)*g,u+=this.shrinkDistance*((u-50)/m)*g,o*=1-g,y===this.shrinkDuration&&(n.tick=0))):o=0),this.vertices.push(d,c,u,n.vertexColors[0],n.vertexColors[1],n.vertexColors[2],o))}this.state==="stopping"&&E===0&&(this.state="stopped")}_defaultRenderer(){for(this.depth=Math.max(this.layerDistance*this.layerCount/2,this.mouseForce),this.minZ=-this.depth,this.maxZ=this.depth,_=this.context.createImageData(this.width,this.height),r=0;r<this.origins.length;r++)n=this.origins[r],e=this.particles[r],!e.isDead&&!e.isHidden&&(d=~~e.x,c=~~e.y,o=n.color[3],this.alphaFade>0&&this.layerCount>1&&(u=Math.max(Math.min(e.z,this.maxZ),this.minZ)-this.minZ,o=o*(1-this.alphaFade)+o*this.alphaFade*(u/(this.maxZ-this.minZ)),o=Math.max(Math.min(~~o,255),0)),b=(d+c*this.width)*4,_.data[b+0]=n.color[0],_.data[b+1]=n.color[1],_.data[b+2]=n.color[2],_.data[b+3]=o);this.context.putImageData(_,0,0)}_initParticles(){for(this.particles=void 0,this.particles=[],r=0;r<this.origins.length;r++)n=this.origins[r],e={},this._initParticlePosition(n,e),this._initParticleDirection(e),this.particles.push(e)}_initParticlePosition(t,i){switch(i.z=0,this.initPosition){case"random":{i.x=Math.random()*this.width,i.y=Math.random()*this.height;break}case"top":{i.x=Math.random()*this.width*3-this.width,i.y=-Math.random()*this.height;break}case"left":{i.x=-Math.random()*this.width,i.y=Math.random()*this.height*3-this.height;break}case"bottom":{i.x=Math.random()*this.width*3-this.width,i.y=this.height+Math.random()*this.height;break}case"right":{i.x=this.width+Math.random()*this.width,i.y=Math.random()*this.height*3-this.height;break}case"misplaced":{i.x=t.x+Math.random()*this.width*.3-this.width*.1,i.y=t.y+Math.random()*this.height*.3-this.height*.1;break}default:i.x=t.x,i.y=t.y}}_fade(){if(this.fadePosition==="explode"||this.fadePosition==="top"||this.fadePosition==="left"||this.fadePosition==="bottom"||this.fadePosition==="right"?this.state="stopping":this.state="stopped",this.origins)for(r=0;r<this.origins.length;r++)this._fadeOriginPosition(this.origins[r]),this._fadeOriginDirection(this.particles[r])}_fadeOriginPosition(t){switch(this.fadePosition){case"random":{t.x=Math.random()*this.width*2-this.width,t.y=Math.random()*this.height*2-this.height,t.x>0&&(t.x+=this.width),t.y>0&&(t.y+=this.height);break}case"top":{t.x=Math.random()*this.width*3-this.width,t.y=-Math.random()*this.height;break}case"left":{t.x=-Math.random()*this.width,t.y=Math.random()*this.height*3-this.height;break}case"bottom":{t.x=Math.random()*this.width*3-this.width,t.y=this.height+Math.random()*this.height;break}case"right":{t.x=this.width+Math.random()*this.width,t.y=Math.random()*this.height*3-this.height;break}}}_initParticleDirection(t){switch(t.vz=0,this.initDirection){case"random":{h=Math.random()*Math.PI*2,s=Math.random(),t.vx=this.width*s*Math.sin(h)*.1,t.vy=this.height*s*Math.cos(h)*.1;break}case"top":{h=Math.random()*Math.PI-Math.PI/2,s=Math.random(),t.vx=this.width*s*Math.sin(h)*.1,t.vy=this.height*s*Math.cos(h)*.1;break}case"left":{h=Math.random()*Math.PI+Math.PI,s=Math.random(),t.vx=this.width*s*Math.sin(h)*.1,t.vy=this.height*s*Math.cos(h)*.1;break}case"bottom":{h=Math.random()*Math.PI+Math.PI/2,s=Math.random(),t.vx=this.width*s*Math.sin(h)*.1,t.vy=this.height*s*Math.cos(h)*.1;break}case"right":{h=Math.random()*Math.PI,s=Math.random(),t.vx=this.width*s*Math.sin(h)*.1,t.vy=this.height*s*Math.cos(h)*.1;break}default:t.vx=0,t.vy=0}}_fadeOriginDirection(t){switch(this.fadeDirection){case"random":{h=Math.random()*Math.PI*2,s=Math.random(),t.vx+=this.width*s*Math.sin(h)*.1,t.vy+=this.height*s*Math.cos(h)*.1;break}case"top":{h=Math.random()*Math.PI-Math.PI/2,s=Math.random(),t.vx+=this.width*s*Math.sin(h)*.1,t.vy+=this.height*s*Math.cos(h)*.1;break}case"left":{h=Math.random()*Math.PI+Math.PI,s=Math.random(),t.vx+=this.width*s*Math.sin(h)*.1,t.vy+=this.height*s*Math.cos(h)*.1;break}case"bottom":{h=Math.random()*Math.PI+Math.PI/2,s=Math.random(),t.vx+=this.width*s*Math.sin(h)*.1,t.vy+=this.height*s*Math.cos(h)*.1;break}case"right":{h=Math.random()*Math.PI,s=Math.random(),t.vx+=this.width*s*Math.sin(h)*.1,t.vy+=this.height*s*Math.cos(h)*.1;break}default:t.vx=0,t.vy=0}}_initOrigins(){P=document.createElement("canvas"),this.responsiveWidth&&(this.width=this.wrapperElement.clientWidth),this.ratio=Math.min(this.width,this.maxWidth||Number.POSITIVE_INFINITY)/Math.min(this.height,this.maxHeight||Number.POSITIVE_INFINITY),this.ratio<this.imageRatio?(this.renderWidth=~~Math.min(this.width||Number.POSITIVE_INFINITY,this.minWidth||this.imageWidth||Number.POSITIVE_INFINITY,this.maxWidth||Number.POSITIVE_INFINITY),this.renderHeight=~~(this.renderWidth/this.imageRatio)):(this.renderHeight=~~Math.min(this.height||Number.POSITIVE_INFINITY,this.minHeight||this.imageHeight||Number.POSITIVE_INFINITY,this.maxHeight||Number.POSITIVE_INFINITY),this.renderWidth=~~(this.renderHeight*this.imageRatio)),this.offsetX=~~((this.width-this.renderWidth)/2),this.offsetY=~~((this.height-this.renderHeight)/2),P.width=this.renderWidth,P.height=this.renderHeight,C=P.getContext("2d"),C.drawImage(this.image,0,0,this.renderWidth,this.renderHeight),D=C.getImageData(0,0,this.renderWidth,this.renderHeight).data,this.origins=void 0,this.origins=[];const t=this.growDuration+this.waitDuration+this.shrinkDuration;for(d=0;d<this.renderWidth;d+=this.particleGap)for(c=0;c<this.renderHeight;c+=this.particleGap)if(r=(d+c*this.renderWidth)*4,o=D[r+3],o>0){const i=Math.random();if(y=-Math.floor(i*t),this.colorArr)for(v=0;v<this.layerCount;v++)this.origins.push({x:this.offsetX+d,y:this.offsetY+c,z:v*this.layerDistance+50,color:this.colorArr,tick:y,seed:i,vertexColors:this.colorArr.map(a=>a/255)});else for(F=D[r],H=D[r+1],k=D[r+2],v=0;v<this.layerCount;v++)this.origins.push({x:this.offsetX+d,y:this.offsetY+c,z:v*this.layerDistance+50,color:[F,H,k,o],tick:y,seed:i,vertexColors:[F/255,H/255,k/255,o/255]})}this.speed=Math.log(this.origins.length)/10,this.gravityFactor=1-this.gravity*this.speed}_parseColor(t){let i;if(typeof t!="string")return;const a=t.replace(" ","");if(i=/^#([\da-fA-F]{2})([\da-fA-F]{2})([\da-fA-F]{2})/.exec(a))i=[parseInt(i[1],16),parseInt(i[2],16),parseInt(i[3],16)];else if(i=/^#([\da-fA-F])([\da-fA-F])([\da-fA-F])/.exec(a))i=[parseInt(i[1],16)*17,parseInt(i[2],16)*17,parseInt(i[3],16)*17];else if(i=/^rgba\(([\d]+),([\d]+),([\d]+),([\d]+|[\d]*.[\d]+)\)/.exec(a))i=[+i[1],+i[2],+i[3],+i[4]];else if(i=/^rgb\(([\d]+),([\d]+),([\d]+)\)/.exec(a))i=[+i[1],+i[2],+i[3]];else return;return i}}return{InspiraImageParticle:U}};export{J as inspiraImageParticles};
